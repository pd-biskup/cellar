#! /usr/bin/bash

function read_config {
    CONFIG=$(sed 's/#.*//' "$DIR/config")
    WINEPREFIX_DIR=$(echo "$CONFIG" | grep 'WINEPREFIX_DIR=' | sed -e 's/WINEPREFIX_DIR=//')
    if [[ -n $WINEPREFIX_DIR ]]
    then
        CUSTOM_WINEPREFIX_DIR=1
    else
        WINEPREFIX_DIR="$DIR/bottles"
    fi
    BITNESS=$(echo "$CONFIG" | grep 'DEFAULT_BITNESS=' | sed -e 's/DEFAULT_BITNESS=//')
    if [[ ! -n $BITNESS ]]
    then
        BITNESS="win32"
    fi
    ISOLATION=$(echo "$CONFIG" | grep 'DEFAULT_ISOLATION=' | sed -e 's/DEFAULT_ISOLATION=//')
    if [[ ! -n $ISOLATION ]]
    then
        ISOLATION=""
    fi
}

function args_u {
    if [[ -z $1 ]]
    then
        help
    else
        NAME="$1"
        if [[ -z $CUSTOM_WINEPREFIX_DIR ]]
        then
            WINEPREFIX="$WINEPREFIX_DIR/$1/wineprefix"
        else
            WINEPREFIX="$WINEPREFIX_DIR/$1"
        fi
        BOTTLE="$DIR/bottles/$1"
        shift
        WINEPREFIX=$(echo "$WINEPREFIX" | sed -e "s,~,$HOME,")
        WINEPREFIX=$(realpath -ms "$WINEPREFIX")
    fi
}

function args_c {
    if [[ -z $1 ]]
    then
        OP='h'
    else
        NAME="$1"
        if [[ -z $CUSTOM_WINEPREFIX_DIR ]]
        then
            WINEPREFIX="$WINEPREFIX_DIR/$1/wineprefix"
        else
            WINEPREFIX="$WINEPREFIX_DIR/$1"
        fi
        BOTTLE="$DIR/bottles/$1"
        shift
        while [[ -n $1 ]]
        do
            case $1 in
            '-x86')
                BITNESS='win32'
            ;;
            '-x64')
                BITNESS='win64'
            ;;
            '-o')
                shift
                if [[ -z $1 ]]
                then
                    help
                else
                    WINEPREFIX="$1"
                    CUSTOM_WINEPREFIX_DIR=1
                fi
            ;;
            '-s')
                ISOLATION=1
            ;;
            '-i')
                ISOLATION=0
            ;;
            *)
                help
                break
            ;;
            esac
            shift
        done
    fi
    WINEPREFIX=$(echo "$WINEPREFIX" | sed -e "s,~,$HOME,")
    WINEPREFIX=$(realpath -ms "$WINEPREFIX")
}

function args_r {
    if [[ -z $1 ]]
    then
        OP='h'
    else
        NAME=$1
        shift
        while [[ -n $1 ]]
        do
            case $1 in
                '-f' | '--force')
                    FORCE=1
                    shift
                ;;
                *)
                    help
                    break
                ;;
            esac
        done
    fi
}

function list {
    args_l "$@"
    printf "   %-22s %-7s %-22s\n" "Name" "Bit" "Location"
    echo "--------------------------------------------------------------------------------"
    for d in $DIR/bottles/*
    do
        if [[ -f $d/bottle ]]
        then
            NAME=$(grep name= < "$d/bottle" | sed -e "s/name=//")
            BITNESS=$(grep bitness= < "$d/bottle" | sed -e "s/bitness=//")
            WINEPREFIX=$(grep wineprefix= < "$d/bottle" | sed -e "s/wineprefix=//")
            if [[ "$NAME" == "$BOTTLE_ACTIVE" ]]
            then
                ACTIVE_="*"
            else
                ACTIVE_=" "
            fi
            printf " %s %-22s %-7s %-22s\n" "$ACTIVE_" "$NAME" "$BITNESS" "$WINEPREFIX"
        fi
    done
}

function create {
    args_c "$@"
    if [[ -f "$BOTTLE/bottle" ]]
    then
        echo 'Bottle with this name already exists'
    else
        mkdir -p "$WINEPREFIX"
        export WINEPREFIX="$WINEPREFIX"
        export WINEARCH="$BITNESS"
        install -m755 "/usr/share/cellar/logger" "$BOTTLE/logger"
        echo "Creating wineprefix $NAME..."
        mkdir "$BOTTLE/logs"
        wineboot -i &> >("$BOTTLE/logger" $(command -v wineboot))
        if [[ "$CUSTOM_WINEPREFIX_DIR" == 1 ]]
        then
            mkdir -p "$BOTTLE"
            ln -s "$WINEPREFIX" "$BOTTLE/wineprefix"
        fi
        if [[ "$ISOLATION" == 1 ]]
        then
            rm -rf "$WINEPREFIX/dosdevices/z:"
            rm -rf "$WINEPREFIX/drive_c/users/$USER/Desktop"
            rm -rf "$WINEPREFIX/drive_c/users/$USER/My Documents"
            rm -rf "$WINEPREFIX/drive_c/users/$USER/My Music"
            rm -rf "$WINEPREFIX/drive_c/users/$USER/My Pictures"
            rm -rf "$WINEPREFIX/drive_c/users/$USER/My Videos"
            mkdir "$WINEPREFIX/drive_c/users/$USER/Desktop"
            mkdir "$WINEPREFIX/drive_c/users/$USER/My Documents"
            mkdir "$WINEPREFIX/drive_c/users/$USER/My Music"
            mkdir "$WINEPREFIX/drive_c/users/$USER/My Pictures"
            mkdir "$WINEPREFIX/drive_c/users/$USER/My Videos"
            touch "$WINEPREFIX/drive_c/users/$USER/Desktop/.NO_SYMLINK"
            touch "$WINEPREFIX/drive_c/users/$USER/My Documents/.NO_SYMLINK"
            touch "$WINEPREFIX/drive_c/users/$USER/My Music/.NO_SYMLINK"
            touch "$WINEPREFIX/drive_c/users/$USER/My Pictures/.NO_SYMLINK"
            touch "$WINEPREFIX/drive_c/users/$USER/My Videos/.NO_SYMLINK"
        fi
        mkdir "$BOTTLE/shortcuts"
        touch "$BOTTLE/bottle"
        echo "name=$NAME" >> "$BOTTLE/bottle"
        echo "bitness=$BITNESS" >> "$BOTTLE/bottle"
        echo "wineprefix=$WINEPREFIX" >> "$BOTTLE/bottle"
        install -m644 "/usr/share/cellar/uncork" "$BOTTLE/uncork"
        sed -i -e "s,{{NAME}},$NAME," "$BOTTLE/uncork"
        mkdir "$BOTTLE/bin"
        for SCRIPT in /usr/share/cellar/scripts/*
        do
            SCRIPT_NAME="${SCRIPT##*/}"
            install -m755 "$SCRIPT" "$BOTTLE/bin/$SCRIPT_NAME"
        done
        mkdir "$BOTTLE/bin/winetricks"
        for SCRIPT in /usr/share/cellar/winetricks/*
        do
            SCRIPT_NAME="${SCRIPT##*/}"
            install -m755 "$SCRIPT" "$BOTTLE/bin/winetricks/$SCRIPT_NAME"
        done
    fi
}

function update {
    args_u "$@"
    if [[ ! -f "$BOTTLE/bottle" ]]
    then
        echo "Bottle with this name doesn't exist"
    else
        echo "Updating bottle $NAME..."
        install -m755 "/usr/share/cellar/logger" "$BOTTLE/logger"
        install -m644 "/usr/share/cellar/uncork" "$BOTTLE/uncork"
        sed -i -e "s,{{NAME}},$NAME," "$BOTTLE/uncork"
        for SCRIPT in /usr/share/cellar/scripts/*
        do
            SCRIPT_NAME="${SCRIPT##*/}"
            install -m755 "$SCRIPT" "$BOTTLE/bin/$SCRIPT_NAME"
        done
        for SCRIPT in /usr/share/cellar/winetricks/*
        do
            SCRIPT_NAME="${SCRIPT##*/}"
            install -m755 "$SCRIPT" "$BOTTLE/bin/winetricks/$SCRIPT_NAME"
        done
    fi
}

function delete {
    args_d "$@"
    if [[ -d "$DIR/bottles/$NAME" ]]
    then
        if [[ -z $FORCE ]]
        then
            echo -n "Are you sure you want to delete wineprefix $NAME? [Y/n] "
            read CONFIRM
        else
            CONFIRM='y'
        fi
        if [[ "$CONFIRM" == 'y' || "$CONFIRM" == 'Y' || -z "$CONFIRM" ]]
        then
            WINEPREFIX=$(grep wineprefix < "$DIR/bottles/$NAME/bottle" | sed -e "s/wineprefix=//")
            echo "Deleting wineprefix $NAME..."
            rm -rf "$WINEPREFIX"
            rm -rf "$DIR/bottles/$NAME"
        fi
    else
        echo "No bottle named $NAME"
    fi
}

function fix {
    bottle="$DIR/bottles/$1/bottle"
    if [[ ! -f "$bottle" ]]
    then
        echo "Bottle with this name doesn't exist"
    else
        prefix=$(cat "$bottle" | grep "^wineprefix=" | sed 's/^wineprefix=//')
        WINEPREFIX="$prefix" wineboot -u &> >("$BOTTLE/logger" $(command -v wineboot))
    fi
}

function wines {
    wine_type='upstream'
    bitness='x86'
    case "$1" in
    local)
        shift
        ;;
    remote)
        shift
        while [[ -n "$1" ]]
        do
            case "$1" in
            -s | --staging)
                wine_type='staging'
                shift
                ;;
            -p | --proton)
                wine_type='proton'
                shift
                ;;
            -x86)
                bitness='x86'
                shift
                ;;
            -x64)
                bitness='amd64'
                shift
                ;;
            esac
        done
        url="https://phoenicis.playonlinux.com/index.php/wine?os=linux"
        json=$(curl -s "$url" | jq -r --arg name "$wine_type-linux-$bitness" '.[] | select(.name == $name) | .packages | .[] | .version' | sort -V)
        IFS=$'\n'
        for version in $json
        do
            echo "$version-$wine_type-$bitness"
        done
        ;;
    download)
        shift
        ;;
    remove)
        shift
        ;;
    *)
        help
        ;;
    esac
}

function help {
    echo -e "$USAGE"
}

DIR="$HOME/.cellar"
USAGE='usage: cellar <operation> [...]
operations:
list - list bottles
create <name> [options] - create bottle
update <name> - update bottle
remove <name> - remove bottle
help - show usage'

if [[ ! -d "$DIR" ]]
then
    mkdir "$DIR"
fi
if [[ ! -d "$DIR/bottles" ]]
then
    mkdir "$DIR/bottles"
fi
if [[ ! -f "$DIR/config" ]]
then
    install -m644 "/usr/share/cellar/config" "$DIR"
fi

read_config

if [[ $# > 0 ]]
then
    subcommand="$1"
    shift
    case $subcommand in
        list)
            list "$@"
            ;;
        create)
            create "$@"
            ;;
        update)
            update "$@"
            ;;
        delete)
            delete "$@"
            ;;
        fix)
            fix "$@"
            ;;
        wines)
            wines "$@"
            ;;
        *)
            help
            ;;
    esac
fi
